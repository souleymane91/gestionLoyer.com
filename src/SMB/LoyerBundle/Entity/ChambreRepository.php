<?php

namespace SMB\LoyerBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ChambreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChambreRepository extends EntityRepository
{
        
    /************************************************
    * fonction qui permet de supprimer une chambre
    * Renvoie la liste des chambres non supprimés
    *************************************************/
    public function supprimer_chambre($id){
        $qb = $this->createQueryBuilder('c')
                   ->update()
                   ->set('c.supprime', TRUE)
                   ->where('c.id = :id')
                   ->setParameter('id',$id);
        return $qb->getQuery()->getResult();
    }
    
    /***************************************************************
    * fonction qui vérifie si une chambre est supprimé ou pas
    * Renvoie true si le chambre est supprimé et false sinon
    **************************************************************/
    public function estSupprime($id){
        $qb = $this->createQueryBuilder('c')
                   ->where('c.id = :id')
                   ->setParameter('id',$id)
                   ->andWhere('c.supprime = :bol')
                   ->setParameter('bol', TRUE)
                   ->getQuery();
        $result = $qb->getOneOrNullResult();
        if(!$result){
            return FALSE;
        }
        else{
            return TRUE;
        }
    }
    /*****************************************************************
    * Recupérer l'ensemble des chambres qui ne sont pas supprimés
    *****************************************************************/
    public function listChambres(){
       //On recupère l'ensemble des chambres
       $qb=$this->createQuerybuilder('c')
                ->where('c.supprime = :bol')
                ->setParameter('bol', FALSE);
       return $qb->getQuery()->getResult();
    }
    
    /*****************************************************
     * fonction qui teste si une chambre existe déja ou pas
     *****************************************************/
    public function existe($numero){
        $qb = $this->createQueryBuilder('c')
                   ->where('c.numero = :num')
                   ->setParameter('num', $numero);
        if($qb->getQuery()->getResult() == NULL){
            return false;
        }else{
            return true;
        }
    }
    
    /*********************************************************
     * fonction qui permet de restaurer une chambre supprimée
     * renvoie false si le nom à restaurer n'existe pas 
     * et true sinon
     *********************************************************/
    public function restaurer($num){
        $qb = $this->createQueryBuilder('c')
                   ->update()
                   ->set('c.supprime', 0)
                   ->where('c.numero = :num')
                   ->setParameter('num', $num);
        
        if($qb->getQuery()->getResult() == NULL){
            return false;
        }
        else{
            return true;
        }
    }
    
    /**************************************************
     * fonction qui permet de recuperer la chambre
     * qui a un numero donné
     **************************************************/
    public function chambre($numero){
        $qb = $this->createQueryBuilder('c')
                   ->where('c.numero = :num')
                   ->setParameter('num',$numero);
        return $qb->getQuery()->getOneOrNullResult();
    }
}
